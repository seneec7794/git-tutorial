{"name":"Git Tutorial","tagline":"Its only the beGITning","body":"#GitHub Tutorial\r\n_By: Senee Coward_\r\n\r\n---\r\n\r\n###Git vs. GitHub\r\n1)_Git_: is a version  control, that can take a photo of you code.\r\n\r\n2)_GitHub_: a person could store their code in the cloud, you can visually track changes made (helpfulgit when working with a large group) and work on the same project with other people.\r\n\r\n---\r\n\r\n###Initial Setup\r\n*  Initial setup is what you do when you are creating a project, once you initialize you don't lose anything, all of your work will still be there when you close your tab (or workspace)\r\n\r\n---\r\n\r\n###Repository Setup\r\n* Repository setup is another name for a directory. A repository is basically your workspace where you can put all of your code\r\n\r\n---\r\n\r\n###Workflow & Commands\r\n####There are two options: \r\n\r\n* The first option is the initial repository (which has no existing projects on github)\r\n\r\n* The second option is, you can start your project on someone else's repository: by forking/cloning and pushing/pulling\r\n\r\n####Examples of commands:\r\n\r\n* git init: this command initializes git on your directory (repository) for version control _*(YOU ONLY DO THIS ONCE AT THE BEGINNING)*_\r\n\r\n* git status: this command is optional, it can be used to see which files had been edited since the last commit you made *(this will be RED)*\r\n\r\n* git add file.txt: for this command you can add files to the stage to be committed\r\n\r\n* git status: again this command is optional but is very helpful, you can see which files are being staged for the commit *(this will be GREEN)*\r\n\r\n* git command -m \"short/specific message\": this command takes a photo or \"snapshot\" of the files on the stage. The -m mean you should leave message that is short and specific, your message should be in the present tense that would describe the changes made.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}